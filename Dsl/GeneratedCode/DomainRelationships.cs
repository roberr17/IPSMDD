//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasVentanas
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("a5ab6156-f6e1-4d7d-b1b7-3fb2db45b569")]
	public partial class TapizHasVentanas : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasVentanas domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa5ab6156, 0xf6e1, 0x4d7d, 0xb1, 0xb7, 0x3f, 0xb2, 0xdb, 0x45, 0xb5, 0x69);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasVentanas link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public TapizHasVentanas(Tapiz source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasVentanas.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasVentanas.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasVentanas(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasVentanas(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasVentanas(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasVentanas(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x48e40a6c, 0x7b5a, 0x4b76, 0x89, 0x5b, 0x2b, 0x8f, 0xd2, 0x91, 0xf6, 0x55);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Tapiz.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Tapiz.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventanas", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("48e40a6c-7b5a-4b76-895b-2b8fd291f655")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Ventana
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Ventana element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Ventana element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaDomainRoleId, newTapiz);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0x2840cf83, 0xd87f, 0x45ae, 0xb7, 0xd2, 0x76, 0x99, 0x76, 0x25, 0xc9, 0x35);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Ventana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Ventana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas/Ventana.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("2840cf83-d87f-45ae-b7d2-76997625c935")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventanas of a Tapiz
		/// <summary>
		/// Gets a list of Ventanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Ventana> GetVentanas(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasVentanas links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> GetLinksToVentanas ( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas>(tapizInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.TapizDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the TapizHasVentanas link to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas GetLinkToTapiz (global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana ventanaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas>(ventanaInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.VentanaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Ventana not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasVentanas instance accessors
		
		/// <summary>
		/// Get any TapizHasVentanas links between a given Tapiz and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.TapizDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasVentanas link between a given Tapizand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.TapizDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasMenus
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("f907b780-40bf-422e-a9bc-3711a61d38d8")]
	public partial class VentanaHasMenus : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasMenus domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xf907b780, 0x40bf, 0x422e, 0xa9, 0xbc, 0x37, 0x11, 0xa6, 0x1d, 0x38, 0xd8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasMenus link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public VentanaHasMenus(Ventana source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasMenus.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasMenus.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasMenus(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasMenus(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasMenus(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasMenus(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xdbc546b8, 0x300f, 0x4683, 0x86, 0x37, 0xcc, 0x01, 0x4a, 0xdf, 0x44, 0x86);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Ventana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Ventana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menus", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("dbc546b8-300f-4683-8637-cc014adf4486")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Menu
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(Menu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MenuDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(Menu element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MenuDomainRoleId, newVentana);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x022aab6d, 0x83c5, 0x44d4, 0xa7, 0x0e, 0x50, 0x91, 0x08, 0x52, 0xfb, 0xf3);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Menu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Menu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus/Menu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("022aab6d-83c5-44d4-a70e-50910852fbf3")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menus of a Ventana
		/// <summary>
		/// Gets a list of Menus.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenus(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasMenus links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> GetLinksToMenus ( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus>(ventanaInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.VentanaDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the VentanaHasMenus link to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus GetLinkToVentana (global::UPM_IPS.RDMDCM_ProyectoIPS.Menu menuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus>(menuInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.MenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Menu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasMenus instance accessors
		
		/// <summary>
		/// Get any VentanaHasMenus links between a given Ventana and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana source, global::UPM_IPS.RDMDCM_ProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasMenus link between a given Ventanaand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana source, global::UPM_IPS.RDMDCM_ProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship MenuHasItemMenus
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("2cd63edc-8642-4b0e-9e2b-868cca4e6be4")]
	public partial class MenuHasItemMenus : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// MenuHasItemMenus domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2cd63edc, 0x8642, 0x4b0e, 0x9e, 0x2b, 0x86, 0x8c, 0xca, 0x4e, 0x6b, 0xe4);
	
				
		/// <summary>
		/// Constructor
		/// Creates a MenuHasItemMenus link in the same Partition as the given Menu
		/// </summary>
		/// <param name="source">Menu to use as the source of the relationship.</param>
		/// <param name="target">ItemMenu to use as the target of the relationship.</param>
		public MenuHasItemMenus(Menu source, ItemMenu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(MenuHasItemMenus.MenuDomainRoleId, source), new DslModeling::RoleAssignment(MenuHasItemMenus.ItemMenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuHasItemMenus(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuHasItemMenus(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public MenuHasItemMenus(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public MenuHasItemMenus(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0xa69d458c, 0x7302, 0x4345, 0x83, 0x81, 0x0e, 0x41, 0xb1, 0x60, 0xc1, 0x59);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/Menu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/Menu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ItemMenus", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("a69d458c-7302-4345-8381-0e41b160c159")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a ItemMenu
		/// <summary>
		/// Gets Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Menu GetMenu(ItemMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemMenuDomainRoleId) as Menu;
		}
		
		/// <summary>
		/// Sets Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetMenu(ItemMenu element, Menu newMenu)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemMenuDomainRoleId, newMenu);
		}
		#endregion
		#region ItemMenu domain role code
		
		/// <summary>
		/// ItemMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemMenuDomainRoleId = new global::System.Guid(0x2844ab75, 0xf804, 0x4fb4, 0xa6, 0x0a, 0x2a, 0xcd, 0x50, 0xc0, 0x04, 0x8a);
		
		/// <summary>
		/// DomainRole ItemMenu
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/ItemMenu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/ItemMenu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus/ItemMenu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("2844ab75-f804-4fb4-a60a-2acd50c0048a")]
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemMenus of a Menu
		/// <summary>
		/// Gets a list of ItemMenus.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemMenu> GetItemMenus(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of MenuHasItemMenus links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> GetLinksToItemMenus ( global::UPM_IPS.RDMDCM_ProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus>(menuInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.MenuDomainRoleId);
		}
		#endregion
		#region ItemMenu link accessor
		/// <summary>
		/// Get the MenuHasItemMenus link to a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus GetLinkToMenu (global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu itemMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus>(itemMenuInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region MenuHasItemMenus instance accessors
		
		/// <summary>
		/// Get any MenuHasItemMenus links between a given Menu and a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Menu source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.MenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one MenuHasItemMenus link between a given Menuand a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Menu source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.MenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship VentanaHasBotons
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("494722f3-eb3a-46ee-9699-7cda351b4a37")]
	public partial class VentanaHasBotons : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// VentanaHasBotons domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x494722f3, 0xeb3a, 0x46ee, 0x96, 0x99, 0x7c, 0xda, 0x35, 0x1b, 0x4a, 0x37);
	
				
		/// <summary>
		/// Constructor
		/// Creates a VentanaHasBotons link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Boton to use as the target of the relationship.</param>
		public VentanaHasBotons(Ventana source, Boton target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(VentanaHasBotons.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(VentanaHasBotons.BotonDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasBotons(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasBotons(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public VentanaHasBotons(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public VentanaHasBotons(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xd5eb58ad, 0x7595, 0x4bf0, 0x97, 0xf0, 0x21, 0xc3, 0x05, 0x44, 0xac, 0xec);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Ventana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Ventana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Botons", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("d5eb58ad-7595-4bf0-97f0-21c30544acec")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Boton
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(Boton element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newVentana);
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0xcc7d1697, 0x92ff, 0x457f, 0xb4, 0x5f, 0x9e, 0x42, 0xfa, 0xff, 0xc6, 0xcd);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Boton.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Boton.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons/Boton.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("cc7d1697-92ff-457f-b45f-9e42faffc6cd")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Botons of a Ventana
		/// <summary>
		/// Gets a list of Botons.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBotons(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of VentanaHasBotons links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> GetLinksToBotons ( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons>(ventanaInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.VentanaDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the VentanaHasBotons link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons GetLinkToVentana (global::UPM_IPS.RDMDCM_ProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons>(botonInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaHasBotons instance accessors
		
		/// <summary>
		/// Get any VentanaHasBotons links between a given Ventana and a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana source, global::UPM_IPS.RDMDCM_ProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one VentanaHasBotons link between a given Ventanaand a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana source, global::UPM_IPS.RDMDCM_ProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizHasEstadoFinned
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("d4162179-b71c-4efe-bbd4-2e020fab934d")]
	public partial class TapizHasEstadoFinned : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasEstadoFinned domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd4162179, 0xb71c, 0x4efe, 0xbb, 0xd4, 0x2e, 0x02, 0x0f, 0xab, 0x93, 0x4d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasEstadoFinned link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">EstadoFin to use as the target of the relationship.</param>
		public TapizHasEstadoFinned(Tapiz source, EstadoFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasEstadoFinned.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasEstadoFinned.EstadoFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEstadoFinned(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEstadoFinned(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEstadoFinned(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEstadoFinned(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0xffa93c72, 0x573f, 0x4ac2, 0xa1, 0xd9, 0x7d, 0x64, 0xd2, 0x82, 0x48, 0xe3);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/Tapiz.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/Tapiz.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoFinned", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("ffa93c72-573f-4ac2-a1d9-7d64d28248e3")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a EstadoFin
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(EstadoFin element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EstadoFinDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(EstadoFin element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EstadoFinDomainRoleId, newTapiz);
		}
		#endregion
		#region EstadoFin domain role code
		
		/// <summary>
		/// EstadoFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoFinDomainRoleId = new global::System.Guid(0x1d532cea, 0x81ae, 0x45fe, 0xaf, 0x6e, 0x56, 0x5b, 0xfd, 0x94, 0x05, 0xdd);
		
		/// <summary>
		/// DomainRole EstadoFin
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/EstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/EstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned/EstadoFin.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1d532cea-81ae-45fe-af6e-565bfd9405dd")]
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoFinned of a Tapiz
		/// <summary>
		/// Gets a list of EstadoFinned.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<EstadoFin> GetEstadoFinned(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoFin>, EstadoFin>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasEstadoFinned links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> GetLinksToEstadoFinned ( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned>(tapizInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId);
		}
		#endregion
		#region EstadoFin link accessor
		/// <summary>
		/// Get the TapizHasEstadoFinned link to a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned GetLinkToTapiz (global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin estadoFinInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned>(estadoFinInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of EstadoFin not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasEstadoFinned instance accessors
		
		/// <summary>
		/// Get any TapizHasEstadoFinned links between a given Tapiz and a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasEstadoFinned link between a given Tapizand a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship ItemMenuReferencesVentana
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("61520915-9a29-4b5f-ac91-e367c7b78035")]
	public partial class ItemMenuReferencesVentana : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ItemMenuReferencesVentana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x61520915, 0x9a29, 0x4b5f, 0xac, 0x91, 0xe3, 0x67, 0xc7, 0xb7, 0x80, 0x35);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ItemMenuReferencesVentana link in the same Partition as the given ItemMenu
		/// </summary>
		/// <param name="source">ItemMenu to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public ItemMenuReferencesVentana(ItemMenu source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ItemMenuReferencesVentana.ItemMenuDomainRoleId, source), new DslModeling::RoleAssignment(ItemMenuReferencesVentana.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemMenuReferencesVentana(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemMenuReferencesVentana(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemMenuReferencesVentana(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemMenuReferencesVentana(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ItemMenu domain role code
		
		/// <summary>
		/// ItemMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemMenuDomainRoleId = new global::System.Guid(0xd27b8ca1, 0x32bc, 0x49df, 0x8a, 0x99, 0x1f, 0xc3, 0xd8, 0x90, 0x31, 0xc6);
		
		/// <summary>
		/// DomainRole ItemMenu
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/ItemMenu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/ItemMenu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/ItemMenu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("d27b8ca1-32bc-49df-8a99-1fc3d89031c6")]
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemMenu of a Ventana
		/// <summary>
		/// Gets ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ItemMenu GetItemMenu(Ventana element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaDomainRoleId) as ItemMenu;
		}
		
		/// <summary>
		/// Sets ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetItemMenu(Ventana element, ItemMenu newItemMenu)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaDomainRoleId, newItemMenu);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xc9898eef, 0xec33, 0x48d7, 0x94, 0x7a, 0xdb, 0x27, 0xbe, 0xda, 0x47, 0xf6);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/Ventana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/Ventana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ItemMenu", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("c9898eef-ec33-48d7-947a-db27beda47f6")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a ItemMenu
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(ItemMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemMenuDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(ItemMenu element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemMenuDomainRoleId, newVentana);
		}
		#endregion
		#region ItemMenu link accessor
		/// <summary>
		/// Get the ItemMenuReferencesVentana link to a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana GetLinkToVentana (global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu itemMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana>(itemMenuInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the ItemMenuReferencesVentana link to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana GetLinkToItemMenu (global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana ventanaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana>(ventanaInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.VentanaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Ventana not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ItemMenuReferencesVentana instance accessors
		
		/// <summary>
		/// Get any ItemMenuReferencesVentana links between a given ItemMenu and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ItemMenuReferencesVentana link between a given ItemMenuand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship BotonReferencesVentana
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("ae76a818-e299-4db1-aaf1-28114c9894b3")]
	public partial class BotonReferencesVentana : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// BotonReferencesVentana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xae76a818, 0xe299, 0x4db1, 0xaa, 0xf1, 0x28, 0x11, 0x4c, 0x98, 0x94, 0xb3);
	
				
		/// <summary>
		/// Constructor
		/// Creates a BotonReferencesVentana link in the same Partition as the given Boton
		/// </summary>
		/// <param name="source">Boton to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public BotonReferencesVentana(Boton source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(BotonReferencesVentana.BotonDomainRoleId, source), new DslModeling::RoleAssignment(BotonReferencesVentana.VentanaReferenciadaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public BotonReferencesVentana(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public BotonReferencesVentana(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public BotonReferencesVentana(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public BotonReferencesVentana(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x8a4572f6, 0xcbaf, 0x4885, 0x9f, 0x42, 0xe3, 0x63, 0x25, 0x70, 0x14, 0x51);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/Boton.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/Boton.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VentanaReferenciada", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/Boton.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("8a4572f6-cbaf-4885-9f42-e36325701451")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Boton of a Ventana
		/// <summary>
		/// Gets Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Boton GetBoton(Ventana element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaReferenciadaDomainRoleId) as Boton;
		}
		
		/// <summary>
		/// Sets Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetBoton(Ventana element, Boton newBoton)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaReferenciadaDomainRoleId, newBoton);
		}
		#endregion
		#region VentanaReferenciada domain role code
		
		/// <summary>
		/// VentanaReferenciada domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaReferenciadaDomainRoleId = new global::System.Guid(0x876906ef, 0x21f4, 0x4ea8, 0xb8, 0x53, 0x78, 0x12, 0x0b, 0xeb, 0x84, 0x65);
		
		/// <summary>
		/// DomainRole VentanaReferenciada
		/// Description for
		/// UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.VentanaReferenciada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/VentanaReferenciada.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/VentanaReferenciada.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Boton", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana/VentanaReferenciada.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("876906ef-21f4-4ea8-b853-78120beb8465")]
		public virtual Ventana VentanaReferenciada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaReferenciadaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaReferenciadaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaReferenciada of a Boton
		/// <summary>
		/// Gets VentanaReferenciada.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanaReferenciada(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets VentanaReferenciada.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaReferenciada(Boton element, Ventana newVentanaReferenciada)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newVentanaReferenciada);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the BotonReferencesVentana link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana GetLinkToVentanaReferenciada (global::UPM_IPS.RDMDCM_ProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana>(botonInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaReferenciada link accessor
		/// <summary>
		/// Get the BotonReferencesVentana link to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana GetLinkToBoton (global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana ventanaReferenciadaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana>(ventanaReferenciadaInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.VentanaReferenciadaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VentanaReferenciada not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region BotonReferencesVentana instance accessors
		
		/// <summary>
		/// Get any BotonReferencesVentana links between a given Boton and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Boton source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.BotonDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana link in links )
			{
				if ( target.Equals(link.VentanaReferenciada) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one BotonReferencesVentana link between a given Botonand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Boton source, global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.BotonDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana link in links )
			{
				if ( target.Equals(link.VentanaReferenciada) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship ItemMenuReferencesEstadoFin
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("69d3d402-5e70-4ca9-a31a-bd9e31a104d8")]
	public partial class ItemMenuReferencesEstadoFin : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ItemMenuReferencesEstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x69d3d402, 0x5e70, 0x4ca9, 0xa3, 0x1a, 0xbd, 0x9e, 0x31, 0xa1, 0x04, 0xd8);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ItemMenuReferencesEstadoFin link in the same Partition as the given ItemMenu
		/// </summary>
		/// <param name="source">ItemMenu to use as the source of the relationship.</param>
		/// <param name="target">EstadoFin to use as the target of the relationship.</param>
		public ItemMenuReferencesEstadoFin(ItemMenu source, EstadoFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId, source), new DslModeling::RoleAssignment(ItemMenuReferencesEstadoFin.EstadoFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemMenuReferencesEstadoFin(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemMenuReferencesEstadoFin(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ItemMenuReferencesEstadoFin(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ItemMenuReferencesEstadoFin(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region ItemMenu domain role code
		
		/// <summary>
		/// ItemMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemMenuDomainRoleId = new global::System.Guid(0xfbfa0f77, 0xf9d7, 0x4084, 0x84, 0xb1, 0x69, 0xb1, 0x64, 0x0d, 0x5c, 0xec);
		
		/// <summary>
		/// DomainRole ItemMenu
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/ItemMenu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/ItemMenu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoFin", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/ItemMenu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("fbfa0f77-f9d7-4084-84b1-69b1640d5cec")]
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemMenus of a EstadoFin
		/// <summary>
		/// Gets a list of ItemMenus.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemMenu> GetItemMenus(EstadoFin element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(element, EstadoFinDomainRoleId);
		}
		#endregion
		#region EstadoFin domain role code
		
		/// <summary>
		/// EstadoFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoFinDomainRoleId = new global::System.Guid(0xff5f839e, 0x0320, 0x4964, 0x8c, 0x6b, 0xee, 0x03, 0x4d, 0x41, 0xb9, 0x17);
		
		/// <summary>
		/// DomainRole EstadoFin
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.EstadoFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/EstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/EstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "ItemMenus", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin/EstadoFin.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("ff5f839e-0320-4964-8c6b-ee034d41b917")]
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoFin of a ItemMenu
		/// <summary>
		/// Gets EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstadoFin GetEstadoFin(ItemMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemMenuDomainRoleId) as EstadoFin;
		}
		
		/// <summary>
		/// Sets EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstadoFin(ItemMenu element, EstadoFin newEstadoFin)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemMenuDomainRoleId, newEstadoFin);
		}
		#endregion
		#region ItemMenu link accessor
		/// <summary>
		/// Get the ItemMenuReferencesEstadoFin link to a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin GetLinkToEstadoFin (global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu itemMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin>(itemMenuInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstadoFin link accessor
		/// <summary>
		/// Get the list of ItemMenuReferencesEstadoFin links to a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> GetLinksToItemMenus ( global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin estadoFinInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin>(estadoFinInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.EstadoFinDomainRoleId);
		}
		#endregion
		#region ItemMenuReferencesEstadoFin instance accessors
		
		/// <summary>
		/// Get any ItemMenuReferencesEstadoFin links between a given ItemMenu and a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ItemMenuReferencesEstadoFin link between a given ItemMenuand a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainRelationship BotonReferencesEstadoFin
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("25b07efc-5672-425a-8612-a852adc91687")]
	public partial class BotonReferencesEstadoFin : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// BotonReferencesEstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x25b07efc, 0x5672, 0x425a, 0x86, 0x12, 0xa8, 0x52, 0xad, 0xc9, 0x16, 0x87);
	
				
		/// <summary>
		/// Constructor
		/// Creates a BotonReferencesEstadoFin link in the same Partition as the given Boton
		/// </summary>
		/// <param name="source">Boton to use as the source of the relationship.</param>
		/// <param name="target">EstadoFin to use as the target of the relationship.</param>
		public BotonReferencesEstadoFin(Boton source, EstadoFin target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(BotonReferencesEstadoFin.BotonDomainRoleId, source), new DslModeling::RoleAssignment(BotonReferencesEstadoFin.EstadoFinDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public BotonReferencesEstadoFin(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public BotonReferencesEstadoFin(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public BotonReferencesEstadoFin(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public BotonReferencesEstadoFin(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x8eedd606, 0x67d7, 0x4f10, 0x8b, 0xaf, 0xca, 0x03, 0x93, 0x22, 0x79, 0xac);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/Boton.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/Boton.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EstadoFin", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/Boton.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("8eedd606-67d7-4f10-8baf-ca03932279ac")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Botons of a EstadoFin
		/// <summary>
		/// Gets a list of Botons.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBotons(EstadoFin element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, EstadoFinDomainRoleId);
		}
		#endregion
		#region EstadoFin domain role code
		
		/// <summary>
		/// EstadoFin domain role Id.
		/// </summary>
		public static readonly global::System.Guid EstadoFinDomainRoleId = new global::System.Guid(0xde0e19cc, 0x35ee, 0x40b4, 0xb6, 0xec, 0xc0, 0x6c, 0xf6, 0x23, 0x4d, 0xf0);
		
		/// <summary>
		/// DomainRole EstadoFin
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.EstadoFin
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/EstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/EstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Botons", PropertyDisplayNameKey="UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin/EstadoFin.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.OneMany)]
		[DslModeling::DomainObjectId("de0e19cc-35ee-40b4-b6ec-c06cf6234df0")]
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (EstadoFin)DslModeling::DomainRoleInfo.GetRolePlayer(this, EstadoFinDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EstadoFinDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EstadoFin of a Boton
		/// <summary>
		/// Gets EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static EstadoFin GetEstadoFin(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as EstadoFin;
		}
		
		/// <summary>
		/// Sets EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEstadoFin(Boton element, EstadoFin newEstadoFin)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newEstadoFin);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the BotonReferencesEstadoFin link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin GetLinkToEstadoFin (global::UPM_IPS.RDMDCM_ProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin>(botonInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EstadoFin link accessor
		/// <summary>
		/// Get the list of BotonReferencesEstadoFin links to a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> GetLinksToBotons ( global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin estadoFinInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin>(estadoFinInstance, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.EstadoFinDomainRoleId);
		}
		#endregion
		#region BotonReferencesEstadoFin instance accessors
		
		/// <summary>
		/// Get any BotonReferencesEstadoFin links between a given Boton and a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> GetLinks( global::UPM_IPS.RDMDCM_ProyectoIPS.Boton source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin>();
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.BotonDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one BotonReferencesEstadoFin link between a given Botonand a EstadoFin.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin GetLink( global::UPM_IPS.RDMDCM_ProyectoIPS.Boton source, global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin>(source, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.BotonDomainRoleId);
			foreach ( global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin link in links )
			{
				if ( target.Equals(link.EstadoFin) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
