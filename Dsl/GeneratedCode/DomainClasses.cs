//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass Tapiz
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Tapiz.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Tapiz.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("dd6fe087-fffa-440b-9346-6f3224e6d26d")]
	public partial class Tapiz : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Tapiz domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdd6fe087, 0xfffa, 0x440b, 0x93, 0x46, 0x6f, 0x32, 0x24, 0xe6, 0xd2, 0x6d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region solucionDiagrama domain property code
		
		/// <summary>
		/// solucionDiagrama domain property Id.
		/// </summary>
		public static readonly global::System.Guid solucionDiagramaDomainPropertyId = new global::System.Guid(0x4e0c5001, 0xc558, 0x4e0b, 0x99, 0x84, 0xd6, 0x10, 0x9f, 0x5d, 0x47, 0x9f);
		
		/// <summary>
		/// Storage for solucionDiagrama
		/// </summary>
		private global::System.String solucionDiagramaPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of solucionDiagrama domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Tapiz.Solucion Diagrama
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Tapiz/solucionDiagrama.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Tapiz/solucionDiagrama.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4e0c5001-c558-4e0b-9984-d6109f5d479f")]
		public global::System.String solucionDiagrama
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return solucionDiagramaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				solucionDiagramaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Tapiz.solucionDiagrama domain property.
		/// </summary>
		internal sealed partial class solucionDiagramaPropertyHandler : DslModeling::DomainPropertyValueHandler<Tapiz, global::System.String>
		{
			private solucionDiagramaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Tapiz.solucionDiagrama domain property value handler.
			/// </summary>
			public static readonly solucionDiagramaPropertyHandler Instance = new solucionDiagramaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Tapiz.solucionDiagrama domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return solucionDiagramaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Tapiz element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.solucionDiagramaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Tapiz element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.solucionDiagramaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventanas opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventanas.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.TapizDomainRoleId);
			}
		}
		#endregion
		#region EstadoFinned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoFinned.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoFin> EstadoFinned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoFin>, EstadoFin>(global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Create link for path TapizHasVentanas.Ventanas
				this.Ventanas.Add(sourceVentana1);

				return;
			}
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin sourceEstadoFin2 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin;
			if (sourceEstadoFin2 != null)
			{
				// Create link for path TapizHasEstadoFinned.EstadoFinned
				this.EstadoFinned.Add(sourceEstadoFin2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Delete link for path TapizHasVentanas.Ventanas
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.GetLinks((global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz)this, sourceVentana1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.TapizDomainRoleId, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.VentanaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin sourceEstadoFin2 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin;
			if (sourceEstadoFin2 != null)
			{
				// Delete link for path TapizHasEstadoFinned.EstadoFinned
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.GetLinks((global::UPM_IPS.RDMDCM_ProyectoIPS.Tapiz)this, sourceEstadoFin2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.TapizDomainRoleId, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("854e76af-1860-4c87-be17-eeb46a061f7f")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x854e76af, 0x1860, 0x4c87, 0xbe, 0x17, 0xee, 0xb4, 0x6a, 0x06, 0x1f, 0x7f);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x8d31e6b5, 0x8a53, 0x48e3, 0xa3, 0xe2, 0x47, 0xe6, 0xfc, 0xf4, 0x55, 0x6e);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/nombre.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8d31e6b5-8a53-48e3-a3e2-47e6fcf4556e")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0xff002bd5, 0x55b8, 0x4cc7, 0x99, 0x92, 0xf0, 0xe0, 0xd7, 0x15, 0x6f, 0xe4);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int32 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/ancho.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("ff002bd5-55b8-4cc7-9992-f0e0d7156fe4")]
		public global::System.Int32 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int32>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region alto domain property code
		
		/// <summary>
		/// alto domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoDomainPropertyId = new global::System.Guid(0xc86a4b3d, 0xb000, 0x4574, 0x86, 0x0e, 0x18, 0x2e, 0x8e, 0x70, 0x9b, 0x47);
		
		/// <summary>
		/// Storage for alto
		/// </summary>
		private global::System.Int32 altoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of alto domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Ventana.Alto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/alto.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Ventana/alto.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c86a4b3d-b000-4574-860e-182e8e709b47")]
		public global::System.Int32 alto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				altoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.alto domain property.
		/// </summary>
		internal sealed partial class altoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int32>
		{
			private altoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.alto domain property value handler.
			/// </summary>
			public static readonly altoPropertyHandler Instance = new altoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.alto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int32 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.altoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int32 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int32 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.altoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.Ventana
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.VentanaDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasVentanas.VentanaDomainRoleId, value);
			}
		}
		#endregion
		#region Menus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menus.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ItemMenu opposite domain role accessor
		/// <summary>
		/// Gets or sets ItemMenu.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.Ventana
		/// </summary>
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.VentanaDomainRoleId) as ItemMenu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.VentanaDomainRoleId, value);
			}
		}
		#endregion
		#region Boton opposite domain role accessor
		/// <summary>
		/// Gets or sets Boton.
		/// Description for
		/// UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.VentanaReferenciada
		/// </summary>
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.VentanaReferenciadaDomainRoleId) as Boton;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.VentanaReferenciadaDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.RDMDCM_ProyectoIPS.Menu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.RDMDCM_ProyectoIPS.Boton.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Menu sourceMenu1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Menu;
			if (sourceMenu1 != null)
			{
				// Create link for path VentanaHasMenus.Menus
				this.Menus.Add(sourceMenu1);

				return;
			}
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Boton sourceBoton2 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Boton;
			if (sourceBoton2 != null)
			{
				// Create link for path VentanaHasBotons.Botons
				this.Botons.Add(sourceBoton2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Menu sourceMenu1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Menu;
			if (sourceMenu1 != null)
			{
				// Delete link for path VentanaHasMenus.Menus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.GetLinks((global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana)this, sourceMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.VentanaDomainRoleId, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.MenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.Boton sourceBoton2 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.Boton;
			if (sourceBoton2 != null)
			{
				// Delete link for path VentanaHasBotons.Botons
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.GetLinks((global::UPM_IPS.RDMDCM_ProyectoIPS.Ventana)this, sourceBoton2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.VentanaDomainRoleId, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.BotonDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("98e8388f-f770-4cc7-afe3-8d7d6d041d60")]
	public sealed partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x98e8388f, 0xf770, 0x4cc7, 0xaf, 0xe3, 0x8d, 0x7d, 0x6d, 0x04, 0x1d, 0x60);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region modal domain property code
		
		/// <summary>
		/// modal domain property Id.
		/// </summary>
		public static readonly global::System.Guid modalDomainPropertyId = new global::System.Guid(0xbcf633ae, 0xc74c, 0x4e6b, 0xb5, 0x2b, 0x5a, 0xa4, 0xca, 0x59, 0xc1, 0x46);
		
		/// <summary>
		/// Storage for modal
		/// </summary>
		private global::System.Boolean modalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of modal domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria.Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria/modal.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaSecundaria/modal.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("bcf633ae-c74c-4e6b-b52b-5aa4ca59c146")]
		public global::System.Boolean modal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return modalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				modalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.modal domain property.
		/// </summary>
		internal sealed partial class modalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private modalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.modal domain property value handler.
			/// </summary>
			public static readonly modalPropertyHandler Instance = new modalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.modal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return modalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.modalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.modalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Boton.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Boton.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("ff7c7796-60bc-4ee6-947c-ede0aec7ca65")]
	public partial class Boton : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xff7c7796, 0x60bc, 0x4ee6, 0x94, 0x7c, 0xed, 0xe0, 0xae, 0xc7, 0xca, 0x65);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xc6ea27a2, 0xecaf, 0x497c, 0x8e, 0x97, 0xbf, 0x3a, 0x7e, 0x28, 0x80, 0x0a);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Boton.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Boton/nombre.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Boton/nombre.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c6ea27a2-ecaf-497c-8e97-bf3a7e28800a")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Boton.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Boton, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Boton.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Boton.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Boton element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Boton element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.Boton
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasBotons.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaReferenciada opposite domain role accessor
		/// <summary>
		/// Gets or sets VentanaReferenciada.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.Boton
		/// </summary>
		public virtual Ventana VentanaReferenciada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesVentana.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.Boton
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.BotonDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.BotonDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Menu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Menu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("80748770-fb54-49de-b952-02ebd11bf651")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x80748770, 0xfb54, 0x49de, 0xb9, 0x52, 0x02, 0xeb, 0xd1, 0x1b, 0xf6, 0x51);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xb5252a89, 0x9f21, 0x469e, 0xaa, 0x99, 0xfe, 0x76, 0x4e, 0x7a, 0x47, 0x4d);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.Menu.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.Menu/nombre.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.Menu/nombre.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("b5252a89-9f21-469e-aa99-fe764e7a474d")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.Menu
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.MenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.VentanaHasMenus.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.Menu
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.MenuDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Create link for path MenuHasItemMenus.ItemMenus
				this.ItemMenus.Add(sourceItemMenu1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu sourceItemMenu1 = sourceElement as global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu;
			if (sourceItemMenu1 != null)
			{
				// Delete link for path MenuHasItemMenus.ItemMenus
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.GetLinks((global::UPM_IPS.RDMDCM_ProyectoIPS.Menu)this, sourceItemMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.MenuDomainRoleId, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass ItemMenu
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("4654c816-3729-47e6-bbd3-01f194a36106")]
	public partial class ItemMenu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x4654c816, 0x3729, 0x47e6, 0xbb, 0xd3, 0x01, 0xf1, 0x94, 0xa3, 0x61, 0x06);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x64a53d2c, 0xb573, 0x4c99, 0x99, 0x59, 0xda, 0x48, 0xd5, 0x16, 0x1c, 0xd5);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu/nombre.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.ItemMenu/nombre.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("64a53d2c-b573-4c99-9959-da48d5161cd5")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ItemMenu.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<ItemMenu, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ItemMenu.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ItemMenu.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ItemMenu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ItemMenu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Menu opposite domain role accessor
		/// <summary>
		/// Gets or sets Menu.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenu
		/// </summary>
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenuDomainRoleId) as Menu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.MenuHasItemMenus.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenu
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesVentana.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		/// <summary>
		/// Gets or sets EstadoFin.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenu
		/// </summary>
		public virtual EstadoFin EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId) as EstadoFin;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.ItemMenuDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass EstadoFin
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("85a959ed-6b81-42ec-9236-8ae205bdfb75")]
	public partial class EstadoFin : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x85a959ed, 0x6b81, 0x42ec, 0x92, 0x36, 0x8a, 0xe2, 0x05, 0xbd, 0xfb, 0x75);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x06cf0d57, 0x6731, 0x4cc5, 0x88, 0x0d, 0xad, 0x18, 0xf3, 0x24, 0x4c, 0x61);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin/nombre.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.EstadoFin/nombre.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("06cf0d57-6731-4cc5-880d-ad18f3244c61")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstadoFin.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<EstadoFin, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstadoFin.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstadoFin.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstadoFin element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstadoFin element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFin
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.RDMDCM_ProyectoIPS.TapizHasEstadoFinned.EstadoFinDomainRoleId, value);
			}
		}
		#endregion
		#region ItemMenus opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ItemMenus.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ItemMenu> ItemMenus
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(global::UPM_IPS.RDMDCM_ProyectoIPS.ItemMenuReferencesEstadoFin.EstadoFinDomainRoleId);
			}
		}
		#endregion
		#region Botons opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Botons.
		/// Description for UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Botons
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.RDMDCM_ProyectoIPS.BotonReferencesEstadoFin.EstadoFinDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.RDMDCM_ProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.RDMDCM_ProyectoIPS.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.RDMDCM_ProyectoIPS.VentanaPrincipal.Description", typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel), "UPM_IPS.RDMDCM_ProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.RDMDCM_ProyectoIPS.RDMDCM_ProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0738663f-256d-401a-9b22-301510e34d5f")]
	public sealed partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0738663f, 0x256d, 0x401a, 0x9b, 0x22, 0x30, 0x15, 0x10, 0xe3, 0x4d, 0x5f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
